show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
cna_type_freq <- table(df$cna_type)
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = perc, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- table(df$cna_type)
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = perc, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
df %>% filter(gene_role=="TSG") %>% select("cna_type")
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% select("cna_type") %>% table()
cna_type_freq
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
cna_type_df
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% select("true_cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% select("true_cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% filter(check=="same") %>% select("true_cna_type") %>% table()
colnames(df)
df$check <- NA
df$check[which(df$cna_type==df$true_cna_type)] <- "same"
df$check[which(df$cna_type!=df$true_cna_type)] <- "different"
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% filter(check=="same") %>% select("true_cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% filter(check=="same") %>% select("true_cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
df
df <-assign_event(tgca_samples_summary_classified_filtered) %>% distinct(gene, tumor_type)
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% filter(check=="same") %>% select("true_cna_type") %>% table()
df
df <-assign_event(tgca_samples_summary_classified_filtered) %>% distinct(gene, tumor_type,.keep_all = TRUE)
df
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% filter(check=="same") %>% select("true_cna_type") %>% table()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% select("true_cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% select("true_cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
############ pie chart ##########
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
cna_type_freq <- df %>% filter(gene_role=="TSG") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void()
cna_type_freq <- df %>% filter(gene_role=="oncogenes") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
df
cna_type_freq <- df %>% filter(gene_role=="oncogenes") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df
cna_type_freq <- df %>% filter(gene_role=="oncogenes") %>% select("cna_type") %>% table()
cna_type_freq
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% select("cna_type") %>% table()
cna_type_freq <- df %>% filter(gene_role=="oncogene") %>% select("cna_type") %>% table()
cna_type_df <- as.data.frame(cna_type_freq)
names(cna_type_df) <- c("cna_type", "frequency")
cna_type_df$labels <- paste0((round(cna_type_df$frequency/sum(cna_type_df$frequency),2)*100),"%")
ggplot(cna_type_df, aes(x = "", y = frequency, fill = cna_type)) +
geom_col() +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") + theme_void() + ggtitle(label = "oncogene")
setwd("..")
setwd("..")
setwd("..")
# setwd("Desktop/dottorato/tapacloth/")
tgca_samples_summary_classified <- readRDS(file = "tcga_classified_with_priors.rds")
# setwd("Desktop/dottorato/tapacloth/")
tgca_samples_summary_classified <- readRDS(file = "tcga_classified_with_priors.rds")
ggplot(df, aes(x = gene_role, fill = true_cna_type)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size = 7)) +
geom_bar(show.legend = T) +
# geom_histogram()
# facet_grid(tumor_type ~ gene_role, scales = "free") +
# scale_fill_manual(values = colors) +
theme(strip.text.y = element_text(angle = 0)) +
# facet_wrap(cluster~titv, nrow = length(unique(result_df_titv_filtered$cluster)), ncol = 6) +
labs(title = "(F)",
x = "",
y = "N_called_mutations")
ggplot(df, aes(x = gene_role, fill = true_cna_type)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size = 7)) +
geom_bar(show.legend = T) +
# geom_histogram()
# facet_grid(tumor_type ~ gene_role, scales = "free") +
# scale_fill_manual(values = colors) +
theme(strip.text.y = element_text(angle = 0)) +
# facet_wrap(cluster~titv, nrow = length(unique(result_df_titv_filtered$cluster)), ncol = 6) +
labs(title = "(F)",
x = "",
y = "N_called_mutations")
# setwd("Desktop/dottorato/tapacloth/")
tgca_samples_summary_classified <- readRDS(file = "tcga_classified_with_priors.rds")
colnames(tgca_samples_summary_classified)
df <-assign_event(tgca_samples_summary_classified)
df <-assign_event(tgca_samples_summary_classified_filtered) %>% distinct(gene, tumor_type,.keep_all = TRUE)
assign_event <- function(df){
## true data
df$true_cna_type <- NA
df$true_cna_type[which(df$true_multiplicity=="1" & df$true_ploidy=="2")]<-"HMD" #"DIP-HET"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="4")]<-"AM" #TETRA-HET"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="3")]<-"AM" #TRI-HET"
df$true_cna_type[which(df$true_multiplicity=="1" & df$true_ploidy=="1")]<-"LOH"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="2")]<-"CN-LOH"
## fitted data
df$cna_type <- NA
df$cna_type[which(df$multiplicity=="1" & df$ploidy=="2")]<-"HMD" #"DIP-HET"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="4")]<-"AM" #TETRA-HET"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="3")]<-"AM" #TRI-HET"
df$cna_type[which(df$multiplicity=="1" & df$ploidy=="1")]<-"LOH"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="2")]<-"CN-LOH"
return(drop_na(df))
}
df <-assign_event(tgca_samples_summary_classified)
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=50, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme(
plot.title = element_text(size=15)
)
df$VAF
df$VAF %>% summary()
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=0.2, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=0.01, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=purity)) +
geom_histogram( binwidth=0.01, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF/purity)) +
geom_histogram( binwidth=0.01, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF/purity)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF/purity)) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme(
plot.title = element_text(size=15)
)
VAF/purity
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme(
plot.title = element_text(size=15)
)
df %>% ggplot( aes(x=VAF)) +
geom_histogram( binwidth=0.01, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme(
plot.title = element_text(size=15)
)
View(df)
df$check <- NA
df$check[which(df$cna_type==df$true_cna_type)] <- "same"
df$check[which(df$cna_type!=df$true_cna_type)] <- "different"
table(df$check)
# install.packages("devtools")
devtools::install_github("caravagnalab/rRACES")
library(ggplot2)
library(dplyr)
library(plyr)
library(tidyr)
# setwd("Desktop/dottorato/tapacloth/")
tgca_samples_summary_classified <- readRDS(file = "tcga_classified_with_priors.rds")
assign_event <- function(df){
## true data
df$true_cna_type <- NA
df$true_cna_type[which(df$true_multiplicity=="1" & df$true_ploidy=="2")]<-"HMD" #"DIP-HET"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="4")]<-"AM" #TETRA-HET"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="3")]<-"AM" #TRI-HET"
df$true_cna_type[which(df$true_multiplicity=="1" & df$true_ploidy=="1")]<-"LOH"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="2")]<-"CN-LOH"
## fitted data
df$cna_type <- NA
df$cna_type[which(df$multiplicity=="1" & df$ploidy=="2")]<-"HMD" #"DIP-HET"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="4")]<-"AM" #TETRA-HET"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="3")]<-"AM" #TRI-HET"
df$cna_type[which(df$multiplicity=="1" & df$ploidy=="1")]<-"LOH"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="2")]<-"CN-LOH"
return(drop_na(df))
}
df <-assign_event(tgca_samples_summary_classified)
assign_event <- function(df){
## true data
df$true_cna_type <- NA
df$true_cna_type[which(df$true_multiplicity=="1" & df$true_ploidy=="2")]<-"HMD" #"DIP-HET"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="4")]<-"AM" #TETRA-HET"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="3")]<-"AM" #TRI-HET"
df$true_cna_type[which(df$true_multiplicity=="1" & df$true_ploidy=="1")]<-"LOH"
df$true_cna_type[which(df$true_multiplicity=="2" & df$true_ploidy=="2")]<-"CN-LOH"
## fitted data
df$cna_type <- NA
df$cna_type[which(df$multiplicity=="1" & df$ploidy=="2")]<-"HMD" #"DIP-HET"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="4")]<-"AM" #TETRA-HET"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="3")]<-"AM" #TRI-HET"
df$cna_type[which(df$multiplicity=="1" & df$ploidy=="1")]<-"LOH"
df$cna_type[which(df$multiplicity=="2" & df$ploidy=="2")]<-"CN-LOH"
return(drop_na(df))
}
df <-assign_event(tgca_samples_summary_classified)
library(ggplot2)
library(dplyr)
library(plyr)
library(tidyr)
library(tidyr)
library(tidyr)
detach("package:tidyr", unload = TRUE)
install.packages("RCytoGPS")
library(RCytoGPS)
data(cytoData)
View(cytoData)
data(cytobandLocations)
View(cytobandLocations)
cna <- read.table(file = "Desktop/CRB0000038_D22L0048_103_01_vs_CRB0000038_D22L0045_13_01.segments.txt",header = T)
head(cna)
query = GRanges("chr1", IRanges(c(10, 20, 30), width=5))
subject = GRanges("chr1", IRanges(c(10, 14), width=9))
query
library(GenomicRanges)
query = GRanges("chr1", IRanges(c(10, 20, 30), width=5))
subject = GRanges("chr1", IRanges(c(10, 14), width=9))
query
subject
hits = findOverlaps(query, subject)
hits
pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
query = GRanges("chr1", IRanges(c(10, 20, 30), width=5))
subject = GRanges("chr1", IRanges(c(10, 14), width=9))
hits = findOverlaps(query, subject)
hits
pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
cna
cna$chr<-paste0("chr",cna$chr)
head(cna)
cna_ranges <- makeGRangesFromDataFrame(df = cna,keep.extra.columns = TRUE,seqnames.field = "chr",start.field = "startpos",end.field = "endpos")
cna_ranges
head(cytobandLocations)
cytoband_ranges <- makeGRangesFromDataFrame(df = cytobandLocations,keep.extra.columns = TRUE,seqnames.field = "Chromosome",start.field = "loc.start",end.field = "loc.end")
subject = cytoband_ranges
hits = findOverlaps(query, subject)
hits
query = cna_ranges
subject = cytoband_ranges
query
subject
hits = findOverlaps(query, subject)
hits
pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
subject = cna_ranges
query = cytoband_ranges
hits = findOverlaps(query, subject)
hits
pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
pintersect(query[queryHits(hits)], subject[subjectHits(hits)]) %>% View()
pintersect(query[queryHits(hits)], subject[subjectHits(hits)]) %>% df
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
View(df)
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)]) %>% as.data.frame()
View(df)
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
df
View(df)
df@seqnames
df@ranges
df@ranges %>% as.data.frame()
df@ranges %>% as.data.frame() %>% View()
df
hits
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
df
cna_loh <- cna %>% filter(nMinor==0)
library(dplyr)
cna_loh <- cna %>% filter(nMinor==0)
View(cna_loh)
cna_loh_ranges <- makeGRangesFromDataFrame(df = cna_loh,keep.extra.columns = TRUE,seqnames.field = "chr",start.field = "startpos",end.field = "endpos")
cytoband_ranges <- makeGRangesFromDataFrame(df = cytobandLocations,keep.extra.columns = TRUE,seqnames.field = "Chromosome",start.field = "loc.start",end.field = "loc.end")
subject = cna_ranges
subject = cna_loh_ranges
query = cytoband_ranges
hits = findOverlaps(query, subject)
hits
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
df
df@ranges %>% as.data.frame() %>% View()
df@ranges %>% as.data.frame() %>% View()
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
df
df@ranges %>% as.data.frame() %>% View()
df@ranges %>% as.data.frame() %>% View()
df@ranges %>% as.data.frame() %>% head()
df@seqinfo
df@metadata
df@elementMetadata
df@seqnames
df@seqnames %>% as.data.frame() %>% head()
df@ranges %>% as.data.frame() %>% dim()
df@seqnames %>% as.data.frame() %>% dim()
subject
query
hits = findOverlaps(query, subject,select = "all")
hits
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
df
df@ranges %>% as.data.frame() %>% dim()
df@seqnames %>% as.data.frame() %>% dim()
df@ranges %>% as.data.frame() %>% head()
df@seqnames %>% as.data.frame() %>% head()
df@metadata
df@elementMetadata
df
hits
hits@metadata
hits
df =pintersect(query[queryHits(hits)], subject[subjectHits(hits)])
df
df@ranges %>% as.data.frame() %>% head()
df@seqnames %>% as.data.frame() %>% head()
setwd("Desktop/dottorato/tapacloth/")
library(shiny); runApp('shiny_module_runFit.R')
runApp('shiny_module_runFit.R')
runApp('INCOMMON_shiny/scripts/shiny_runFit.R')
runApp('INCOMMON_shiny/scripts/shiny_runFit.R')
runApp('INCOMMON_shiny/scripts/shiny_runFit.R')
